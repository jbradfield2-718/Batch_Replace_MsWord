Public Class Form1
    Public excelfile As String
    Public wordfile As String
    Public numRows As Short
    Public numColumns As Short
    Public initial_change_flag As Byte
    Public find_vars(1, 1) As String
    Public replace_vars(1, 1) As String

    Private Sub OpenFileDialog1_FileOk(sender As Object, e As System.ComponentModel.CancelEventArgs) Handles OpenFileDialog1.FileOk
        excelfile = OpenFileDialog1.FileName()

        If initial_change_flag = 0 Then
            initial_change_flag = 1
            RichTextBox1.Text = excelfile & " Successfully added as excel File!"
        Else
            RichTextBox1.AppendText(vbCrLf & excelfile & " Successfully added as excel File!")
        End If

    End Sub

    Private Sub excelButton_Click(sender As Object, e As EventArgs) Handles excelButton.Click
        OpenFileDialog1.ShowDialog()
    End Sub

    Private Sub RichTextBox1_TextChanged(sender As Object, e As EventArgs) Handles RichTextBox1.TextChanged

    End Sub

    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        initial_change_flag = 0
    End Sub

    Private Sub TextBoxNumRows_TextChanged(sender As Object, e As EventArgs) Handles TextBoxNumRows.TextChanged

    End Sub

    Private Sub wordButton_Click(sender As Object, e As EventArgs) Handles wordButton.Click
        OpenFileDialog2.ShowDialog()
    End Sub

    Private Sub OpenFileDialog2_FileOk(sender As Object, e As System.ComponentModel.CancelEventArgs) Handles OpenFileDialog2.FileOk
        wordfile = OpenFileDialog2.FileName()
        If initial_change_flag = 0 Then
            initial_change_flag = 1
            RichTextBox1.Text = wordfile & " Successfully added as word template File!"
        Else
            RichTextBox1.AppendText(vbCrLf & wordfile & " Successfully added as word template File!")
        End If
    End Sub

    Private Sub runscriptButton_Click(sender As Object, e As EventArgs) Handles runscriptButton.Click

        numColumns = CShort(TextBoxNumColumns.Text)
        numRows = CShort(TextBoxNumRows.Text)
        'ReDim find_vars(numRows / 2, numColumns)
        'ReDim replace_vars(numRows / 2, numColumns)
        ReDim find_vars(2, 5)
        ReDim replace_vars(2, 5)
        TextBoxNumRows.Text = ""
        TextBoxNumColumns.Text = ""

        Read_Excel(excelfile)

        For i As Integer = 0 To 2
            For j As Integer = 0 To 4
                RichTextBox1.AppendText("Current i = " & i & " Current j = " & j & vbLf)
                RichTextBox1.AppendText(replace_vars(i, j) & vbLf)
                RichTextBox1.AppendText(find_vars(i, j) & vbLf)
            Next j
        Next i


        Const wdReplaceAll = 2
        Dim objWord As Object
        Dim objDoc As Object
        Dim objSelection As Object

        For i As Integer = 0 To numRows / 2
            objWord = CreateObject("Word.Application")
            objWord.Visible = True
            objDoc = objWord.Documents.Open(wordfile)
            objSelection = objWord.Selection

            For j As Integer = 0 To numColumns - 1
                If replace_vars(i, j) = Nothing Then
                    Continue For
                End If

                objSelection.Find.Text = find_vars(i, j)
                'objSelection.Find.Text = "Max Eisenhardt"

                objSelection.Find.Forward = True
                objSelection.Find.MatchWholeWord = True

                objSelection.Find.Replacement.Text = replace_vars(i, j)
                'objSelection.Find.Replacement.Text = "Piero Bianco"
                objSelection.Find.Execute(, , , , , , , , , , wdReplaceAll)
            Next j

            objDoc.SaveAs("C:\replace_doc" & CStr(i) & ".docx")
            objDoc = Nothing
            objWord.Quit()

        Next i
    End Sub

    Private Sub Read_Excel(file)
        Dim intRow As Integer
        Dim objExcel As Object
        Dim objWorkbook As Object

        objExcel = CreateObject("Excel.Application")
        objWorkbook = objExcel.Workbooks.Open _
            (file)

        intRow = 1

        Do Until objExcel.Cells(intRow, 1).Value = ""

            For index As Integer = 0 To numColumns - 1

                'If objExcel.Cells(intRow, index + 1).Value = "#" Then       'Hash used as comments in excel file
                'Continue For
                'End If

                If intRow Mod 2 <> 0 Then
                    find_vars((intRow - 1) / 2, index) = objExcel.Cells(intRow, index + 1).Value
                Else
                    replace_vars((intRow - 2) / 2, index) = objExcel.Cells(intRow, index + 1).Value
                End If


            Next index
            intRow = intRow + 1

        Loop



        'Console.Read()
        objExcel.Quit()

    End Sub
End Class

